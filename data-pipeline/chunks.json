{
  "metadata": {
    "total_documents": 9,
    "crawl_timestamp": "2025-10-04T20:06:38.605718",
    "sources": [
      "FastAPI",
      "Next.js",
      "Prisma",
      "Redis",
      "Supabase"
    ],
    "document_types": [
      "documentation"
    ],
    "processing_stats": {
      "total_documents": 9,
      "total_chunks": 12,
      "chunks_by_source": {
        "Next.js": 1,
        "Supabase": 1,
        "Prisma": 1,
        "FastAPI": 7,
        "Redis": 2
      },
      "chunks_by_type": {
        "documentation": 12
      },
      "average_chunks_per_doc": 1.3333333333333333,
      "chunk_size": 500,
      "overlap": 50,
      "processed_at": "2025-10-04T20:06:38.794985"
    }
  },
  "chunks": [
    {
      "id": "011cf87b303c_chunk_0",
      "parent_id": "011cf87b303c",
      "source": "Next.js",
      "url": "https://nextjs.org/docs",
      "title": "Next.js Documentation",
      "content": "MenuUsing App RouterFeatures available in /appLatest Version15.5.4Next.js DocsWelcome to the Next.js documentation!What is Next.js?Next.js is a React framework for building full-stack web applications. You use React Components to build user interfaces, and Next.js for additional features and optimizations.It also automatically configures lower-level tools like bundlers and compilers. You can instead focus on building your product and shipping quickly.Whether you're an individual developer or part of a larger team, Next.js can help you build interactive, dynamic, and fast React applications.How to use the docsThe docs are organized into 3 sections:Getting Started: Step-by-step tutorials to help you create a new application and learn the core Next.js features.Guides: Tutorials on specific use cases, choose what's relevant to you.API Reference: Detailed technical reference for every feature.Use the sidebar to navigate through the sections, or search (Ctrl+KorCmd+K) to quickly find a page.App Router and Pages RouterNext.js has two different routers:App Router: The newer router that supports new React features like Server Components.Pages Router: The original router, still supported and being improved.At the top of the sidebar, you'll notice a dropdown menu that allows you to switch between theApp Routerand thePages Routerdocs.React version handlingThe App Router and Pages Router handle React versions differently:App Router: UsesReact canary releasesbuilt-in, which include all the stable React 19 changes, as well as newer features being validated in frameworks, prior to a new React release.Pages Router: Uses the React version installed in your project'spackage.json.This approach ensures new React features work reliably in the App Router while maintaining backwards compatibility for existing Pages Router applications.Pre-requisite knowledgeOur documentation assumes some familiarity with web development. Before getting started, it'll help if you're comfortable with:HTMLCSSJavaScriptReactIf you're new to React or need a refresher, we recommend starting with ourReact Foundations course, and theNext.js Foundations coursethat has you building an application as you learn.AccessibilityFor the best experience when using a screen reader, we recommend using Firefox and NVDA, or Safari and VoiceOver.Join our CommunityIf you have questions about anything related to Next.js, you're always welcome to ask our community onGitHub Discussions,Discord,X (Twitter), andReddit.Next StepsCreate your first application and learn the core Next.js features.Getting StartedLearn how to create full-stack web applications with the Next.js App Router.Was this helpful?supported.Send",
      "chunk_index": 0,
      "total_chunks": 1,
      "word_count": 360,
      "chunked_at": "2025-10-04T20:06:38.794985",
      "type": "documentation",
      "crawled_at": "2025-10-04T20:06:16.010003"
    },
    {
      "id": "4db9941852a8_chunk_0",
      "parent_id": "4db9941852a8",
      "source": "Supabase",
      "url": "https://supabase.com/docs",
      "title": "Supabase Documentation",
      "content": "Supabase DocumentationLearn how to get up and running with Supabase through tutorials, APIs and platform resources.Getting StartedSet up and connect a database in just a few minutes.Start with Supabase AI promptsProductsDatabaseSupabase provides a full Postgres database for every project with Realtime functionality, database backups, extensions, and more.AuthAdd and manage email and password, passwordless, OAuth, and mobile logins to your project through a suite of identity providers and APIs.StorageStore, organize, transform, and serve large files—fully integrated with your Postgres database with Row Level Security access policies.RealtimeListen to database changes, store and sync user states across clients, broadcast data to clients subscribed to a channel, and more.Edge FunctionsGlobally distributed, server-side functions to execute your code closest to your users for the lowest latency.Postgres ModulesAI & VectorsCronQueuesClient LibrariesJavascriptFlutterPythonC#SwiftKotlinMigrate to SupabaseBring your existing data, auth and storage to Supabase following our migration guides.Explore more resources about /guides/resourcesExplore more resourcesAmazon RDSAuth0Firebase AuthFirebase StorageFirestore DataHerokuMSSQLMySQLNeonPostgresRenderVercel PostgresAdditional resourcesManagement APIManage your Supabase projects and organizations.Supabase CLIUse the CLI to develop, manage and deploy your projects.Platform GuidesLearn more about the tools and services powering Supabase.IntegrationsExplore a variety of integrations from Supabase partners.Supabase UIA collection of pre-built Supabase components to speed up your project.Self-HostingGet started with self-hosting Supabase.More on Self-Hosting about /guides/self-hostingMore on Self-HostingAuthRealtimeStorageAnalytics",
      "chunk_index": 0,
      "total_chunks": 1,
      "word_count": 204,
      "chunked_at": "2025-10-04T20:06:38.794985",
      "type": "documentation",
      "crawled_at": "2025-10-04T20:06:16.964141"
    },
    {
      "id": "60aeb992b71e_chunk_0",
      "parent_id": "60aeb992b71e",
      "source": "Prisma",
      "url": "https://www.prisma.io/docs",
      "title": "Prisma Documentation",
      "content": "Prisma DocWorking with Prisma gives you a best-in-class TypeScript ORM, a declarative database migration system, and a database with everything you need to get started.Try out what Prisma has to offer with one command:npx prisma init --dbGet Started with Prisma & AIUse Prisma PostgresGet started with your favorite framework and Prisma Postgres.With Prisma Postgresyou get an instant, fully hosted high-performance database that includes built-in caching, scales to zero, and integrates deeply with Prisma ORM and Prisma Studio—all backed by a generous free tier.How to migrate to Prisma PostgresBring your own databaseAlready have a database?With Prisma ORM and Prisma Data Platform, you can supercharge your existing stack. Add connection pooling and caching with generous free tiers.How to migrate to Prisma ORMHow do I...Get started with Prisma & AI?Learn how to get started with Prisma and AI, from setting up Prisma ORM in tools like ChatGPT, Cursor, Windsurf, GitHub Copilot, and Tabnine to using the Prisma MCP server for database automation. Explore step-by-step guides, real-world examples with Next.js, and integrations with Vercel AI SDK and Firebase Studio. Build faster, stay type-safe, and connect Prisma Postgres with thousands of apps to power your AI-driven workflows.Model my schema?The Prisma Schema (or schema for short) is the main method of configuration for your Prisma ORM setup. It consists of the following parts: Data sources: Specify the details of the data sources Prisma ORM should connect to (e.g. a PostgreSQL database) Generators: Specifies what clients should be generated based on the data model (e.g. Prisma Client)Cache my queries?Prisma Postgres comes with a built-in global cache (enabled by Prisma Accelerate) that helps you speed up your database queries. You can cache results on a per-query level using the cacheStrategy option in any Prisma ORM query, e.g.:SeemoreProductsORMTalk to your database, seamlesslyPrisma ORM lets you query your database with an ergonomic TypeScript clientPostgresA DB with next-gen performancePrisma Postgres has bare-metal performance, with the ease of a serverless database — without cold starts.StudioSee your data in stylePrisma Studio makes it easy to explore your data visuallyAccelerateSupercharge yourapp's speedPrisma Accelerate provides caching and connection pooling, making your database available everywhereOptimizeYour queries, smarterPrisma Optimize gives you AI-powered insights on potential issues in your codePlatform ConsoleManage your workspacesand projectsManage your Prisma Data Platform projects, account settings, workspaces and billingGet HelpORM Issues & RequestsFound a bug, or want to request something new? Let us know.Report a bugRequest a new featureCommunity SupportSupport for customers on ourStarter planis provided through ourcommunity channels.Join our DiscordPrisma SupportSupport for customers in ourProorBusinessplan is provided by the Platform Console.Submit a ticketJoin our CommunityWe have multiple channels where you can get help from members of our community as well as the Prisma team.",
      "chunk_index": 0,
      "total_chunks": 1,
      "word_count": 442,
      "chunked_at": "2025-10-04T20:06:38.794985",
      "type": "documentation",
      "crawled_at": "2025-10-04T20:06:22.287521"
    },
    {
      "id": "5fc07527cb48_chunk_0",
      "parent_id": "5fc07527cb48",
      "source": "FastAPI",
      "url": "https://fastapi.tiangolo.com/",
      "title": "FastAPI Documentation",
      "content": "FastAPI¶FastAPI framework, high performance, easy to learn, fast to code, ready for productionDocumentation:https://fastapi.tiangolo.comSource Code:https://github.com/fastapi/fastapiFastAPI is a modern, fast (high-performance), web framework for building APIs with Python based on standard Python type hints.The key features are:Fast: Very high performance, on par withNodeJSandGo(thanks to Starlette and Pydantic).One of the fastest Python frameworks available.Fast to code: Increase the speed to develop features by about 200% to 300%. *Fewer bugs: Reduce about 40% of human (developer) induced errors. *Intuitive: Great editor support.Completioneverywhere. Less time debugging.Easy: Designed to be easy to use and learn. Less time reading docs.Short: Minimize code duplication. Multiple features from each parameter declaration. Fewer bugs.Robust: Get production-ready code. With automatic interactive documentation.Standards-based: Based on (and fully compatible with) the open standards for APIs:OpenAPI(previously known as Swagger) andJSON Schema.* estimation based on tests on an internal development team, building production applications.Sponsors¶Other sponsorsOpinions¶\"[...] I'm usingFastAPIa ton these days. [...] I'm actually planning to use it for all of my team'sML services at Microsoft. Some of them are getting integrated into the coreWindowsproduct and someOfficeproducts.\"Kabir Khan -Microsoft(ref)\"We adopted theFastAPIlibrary to spawn aRESTserver that can be queried to obtainpredictions. [for Ludwig]\"Piero Molino, Yaroslav Dudin, and Sai Sumanth Miryala -Uber(ref)\"Netflixis pleased to announce the open-source release of ourcrisis managementorchestration framework:Dispatch! [built withFastAPI]\"Kevin Glisson, Marc Vilanova, Forest Monsen -Netflix(ref)\"I’m over the moon excited aboutFastAPI. It’s so fun!\"Brian Okken -Python Bytespodcast host(ref)\"Honestly, what you've built looks super solid and polished. In many ways, it's what I wantedHugto be - it's really inspiring to see someone build that.\"Timothy Crosley -Hugcreator(ref)\"If you're looking to learn onemodern frameworkfor building REST APIs, check outFastAPI[...] It's fast, easy to use and easy to learn [...]\"\"We've switched over toFastAPIfor ourAPIs[...] I think you'll like it [...]\"Ines Montani - Matthew Honnibal -Explosion AIfounders -spaCycreators(ref)-(ref)\"If anyone is looking to build a production Python API, I would highly recommendFastAPI. It isbeautifully designed,simple to useandhighly scalable, it has become akey componentin our API first development strategy and is driving many automations and services such as our Virtual TAC Engineer.\"Deon Pillsbury -Cisco(ref)Typer, the FastAPI of CLIs¶If you are building aCLIapp to be used in the terminal instead of a web API, check outTyper.Typeris FastAPI's little sibling. And it's intended to be theFastAPI of CLIs. ⌨️ 🚀Requirements¶FastAPI stands on the shoulders of giants:Starlettefor the web parts.Pydanticfor the data parts.Installation¶Create and activate avirtual environmentand then install FastAPI:$pipinstall\"fastapi[standard]\"---> 100%Note: Make sure you put\"fastapi[standard]\"in quotes to ensure it works in all terminals.Example¶Create it¶Create a filemain.pywith:fromtypingimportUnionfromfastapiimportFastAPIapp=FastAPI()@app.get(\"/\")defread_root():return{\"Hello\":\"World\"}@app.get(\"/items/{item_id}\")defread_item(item_id:int,q:Union[str,None]=None):return{\"item_id\":item_id,\"q\":q}Or useasync def...If your code usesasync/await, useasync def:fromtypingimportUnionfromfastapiimportFastAPIapp=FastAPI()@app.get(\"/\")asyncdefread_root():return{\"Hello\":\"World\"}@app.get(\"/items/{item_id}\")asyncdefread_item(item_id:int,q:Union[str,None]=None):return{\"item_id\":item_id,\"q\":q}Note:If you don't know, check the\"In a hurry?\"section aboutasyncandawaitin the docs.Run it¶Run the server with:$fastapidevmain.py╭────────── FastAPI CLI - Development mode ───────────╮│ ││ Serving at: http://127.0.0.1:8000 ││ ││ API docs: http://127.0.0.1:8000/docs ││ ││ Running in development mode, for production use: ││ ││ fastapi run ││ │╰─────────────────────────────────────────────────────╯INFO: Will watch for changes in these directories: ['/home/user/code/awesomeapp']INFO: Uvicorn running on http://127.0.0.1:8000 (Press CTRL+C to quit)INFO: Started reloader process [2248755] using WatchFilesINFO: Started server process [2248757]INFO: Waiting for application startup.INFO: Application startup complete.About the commandfastapi dev main.py...The commandfastapi devreads yourmain.pyfile, detects theFastAPIapp in it, and starts a",
      "chunk_index": 0,
      "total_chunks": 3,
      "word_count": 500,
      "chunked_at": "2025-10-04T20:06:38.794985",
      "type": "documentation",
      "crawled_at": "2025-10-04T20:06:27.855816"
    },
    {
      "id": "5fc07527cb48_chunk_1",
      "parent_id": "5fc07527cb48",
      "source": "FastAPI",
      "url": "https://fastapi.tiangolo.com/",
      "title": "FastAPI Documentation",
      "content": "run ││ │╰─────────────────────────────────────────────────────╯INFO: Will watch for changes in these directories: ['/home/user/code/awesomeapp']INFO: Uvicorn running on http://127.0.0.1:8000 (Press CTRL+C to quit)INFO: Started reloader process [2248755] using WatchFilesINFO: Started server process [2248757]INFO: Waiting for application startup.INFO: Application startup complete.About the commandfastapi dev main.py...The commandfastapi devreads yourmain.pyfile, detects theFastAPIapp in it, and starts a server usingUvicorn.By default,fastapi devwill start with auto-reload enabled for local development.You can read more about it in theFastAPI CLI docs.Check it¶Open your browser athttp://127.0.0.1:8000/items/5?q=somequery.You will see the JSON response as:{\"item_id\":5,\"q\":\"somequery\"}You already created an API that:Receives HTTP requests in thepaths/and/items/{item_id}.BothpathstakeGEToperations(also known as HTTPmethods).Thepath/items/{item_id}has apath parameteritem_idthat should be anint.Thepath/items/{item_id}has an optionalstrquery parameterq.Interactive API docs¶Now go tohttp://127.0.0.1:8000/docs.You will see the automatic interactive API documentation (provided bySwagger UI):Alternative API docs¶And now, go tohttp://127.0.0.1:8000/redoc.You will see the alternative automatic documentation (provided byReDoc):Example upgrade¶Now modify the filemain.pyto receive a body from aPUTrequest.Declare the body using standard Python types, thanks to Pydantic.fromtypingimportUnionfromfastapiimportFastAPIfrompydanticimportBaseModelapp=FastAPI()classItem(BaseModel):name:strprice:floatis_offer:Union[bool,None]=None@app.get(\"/\")defread_root():return{\"Hello\":\"World\"}@app.get(\"/items/{item_id}\")defread_item(item_id:int,q:Union[str,None]=None):return{\"item_id\":item_id,\"q\":q}@app.put(\"/items/{item_id}\")defupdate_item(item_id:int,item:Item):return{\"item_name\":item.name,\"item_id\":item_id}Thefastapi devserver should reload automatically.Interactive API docs upgrade¶Now go tohttp://127.0.0.1:8000/docs.The interactive API documentation will be automatically updated, including the new body:Click on the button \"Try it out\", it allows you to fill the parameters and directly interact with the API:Then click on the \"Execute\" button, the user interface will communicate with your API, send the parameters, get the results and show them on the screen:Alternative API docs upgrade¶And now, go tohttp://127.0.0.1:8000/redoc.The alternative documentation will also reflect the new query parameter and body:Recap¶In summary, you declareoncethe types of parameters, body, etc. as function parameters.You do that with standard modern Python types.You don't have to learn a new syntax, the methods or classes of a specific library, etc.Just standardPython.For example, for anint:item_id:intor for a more complexItemmodel:item:Item...and with that single declaration you get:Editor support, including:Completion.Type checks.Validation of data:Automatic and clear errors when the data is invalid.Validation even for deeply nested JSON objects.Conversionof input data: coming from the network to Python data and types. Reading from:JSON.Path parameters.Query parameters.Cookies.Headers.Forms.Files.Conversionof output data: converting from Python data and types to network data (as JSON):Convert Python types (str,int,float,bool,list, etc).datetimeobjects.UUIDobjects.Database models....and many more.Automatic interactive API documentation, including 2 alternative user interfaces:Swagger UI.ReDoc.Coming back to the previous code example,FastAPIwill:Validate that there is anitem_idin the path forGETandPUTrequests.Validate that theitem_idis of typeintforGETandPUTrequests.If it is not, the client will see a useful, clear error.Check if there is an optional query parameter namedq(as inhttp://127.0.0.1:8000/items/foo?q=somequery) forGETrequests.As theqparameter is declared with= None, it is optional.Without theNoneit would be required (as is the body in the case withPUT).ForPUTrequests to/items/{item_id}, read the body as JSON:Check that it has a required attributenamethat should be astr.Check that it has a required attributepricethat has to be afloat.Check that it has an optional attributeis_offer, that should be abool, if present.All this would also work for deeply nested JSON objects.Convert from and to JSON automatically.Document everything with OpenAPI, that can be used by:Interactive documentation systems.Automatic client code generation systems, for many languages.Provide 2 interactive documentation web interfaces directly.We just scratched the surface, but you already get the idea of how it all works.Try changing the line with:return{\"item_name\":item.name,\"item_id\":item_id}...from:...\"item_name\":item.name......to:...\"item_price\":item.price......and see how your editor will auto-complete the attributes and know their types:For",
      "chunk_index": 1,
      "total_chunks": 3,
      "word_count": 500,
      "chunked_at": "2025-10-04T20:06:38.799686",
      "type": "documentation",
      "crawled_at": "2025-10-04T20:06:27.855816"
    },
    {
      "id": "5fc07527cb48_chunk_2",
      "parent_id": "5fc07527cb48",
      "source": "FastAPI",
      "url": "https://fastapi.tiangolo.com/",
      "title": "FastAPI Documentation",
      "content": "can be used by:Interactive documentation systems.Automatic client code generation systems, for many languages.Provide 2 interactive documentation web interfaces directly.We just scratched the surface, but you already get the idea of how it all works.Try changing the line with:return{\"item_name\":item.name,\"item_id\":item_id}...from:...\"item_name\":item.name......to:...\"item_price\":item.price......and see how your editor will auto-complete the attributes and know their types:For a more complete example including more features, see theTutorial - User Guide.Spoiler alert: the tutorial - user guide includes:Declaration ofparametersfrom other different places as:headers,cookies,form fieldsandfiles.How to setvalidation constraintsasmaximum_lengthorregex.A very powerful and easy to useDependency Injectionsystem.Security and authentication, including support forOAuth2withJWT tokensandHTTP Basicauth.More advanced (but equally easy) techniques for declaringdeeply nested JSON models(thanks to Pydantic).GraphQLintegration withStrawberryand other libraries.Many extra features (thanks to Starlette) as:WebSocketsextremely easy tests based on HTTPX andpytestCORSCookie Sessions...and more.Performance¶Independent TechEmpower benchmarks showFastAPIapplications running under Uvicorn asone of the fastest Python frameworks available, only below Starlette and Uvicorn themselves (used internally by FastAPI). (*)To understand more about it, see the sectionBenchmarks.Dependencies¶FastAPI depends on Pydantic and Starlette.standardDependencies¶When you install FastAPI withpip install \"fastapi[standard]\"it comes with thestandardgroup of optional dependencies:Used by Pydantic:email-validator- for email validation.Used by Starlette:httpx- Required if you want to use theTestClient.jinja2- Required if you want to use the default template configuration.python-multipart- Required if you want to support form\"parsing\", withrequest.form().Used by FastAPI:uvicorn- for the server that loads and serves your application. This includesuvicorn[standard], which includes some dependencies (e.g.uvloop) needed for high performance serving.fastapi-cli[standard]- to provide thefastapicommand.This includesfastapi-cloud-cli, which allows you to deploy your FastAPI application toFastAPI Cloud.WithoutstandardDependencies¶If you don't want to include thestandardoptional dependencies, you can install withpip install fastapiinstead ofpip install \"fastapi[standard]\".Withoutfastapi-cloud-cli¶If you want to install FastAPI with the standard dependencies but without thefastapi-cloud-cli, you can install withpip install \"fastapi[standard-no-fastapi-cloud-cli]\".Additional Optional Dependencies¶There are some additional dependencies you might want to install.Additional optional Pydantic dependencies:pydantic-settings- for settings management.pydantic-extra-types- for extra types to be used with Pydantic.Additional optional FastAPI dependencies:orjson- Required if you want to useORJSONResponse.ujson- Required if you want to useUJSONResponse.License¶This project is licensed under the terms of the MIT license.Back to top",
      "chunk_index": 2,
      "total_chunks": 3,
      "word_count": 324,
      "chunked_at": "2025-10-04T20:06:38.799686",
      "type": "documentation",
      "crawled_at": "2025-10-04T20:06:27.855816"
    },
    {
      "id": "1a774cf0c4d7_chunk_0",
      "parent_id": "1a774cf0c4d7",
      "source": "FastAPI",
      "url": "https://fastapi.tiangolo.com/tutorial/",
      "title": "FastAPI - tutorial/",
      "content": "Tutorial - User Guide¶This tutorial shows you how to useFastAPIwith most of its features, step by step.Each section gradually builds on the previous ones, but it's structured to separate topics, so that you can go directly to any specific one to solve your specific API needs.It is also built to work as a future reference so you can come back and see exactly what you need.Run the code¶All the code blocks can be copied and used directly (they are actually tested Python files).To run any of the examples, copy the code to a filemain.py, and startfastapi devwith:$<fontcolor=\"#4E9A06\">fastapi</font>dev<ustyle=\"text-decoration-style:solid\">main.py</u><span style=\"background-color:#009485\"><font color=\"#D3D7CF\"> FastAPI </font></span> Starting development server 🚀Searching for package file structure from directorieswith <font color=\"#3465A4\">__init__.py</font> filesImporting from <font color=\"#75507B\">/home/user/code/</font><font color=\"#AD7FA8\">awesomeapp</font><span style=\"background-color:#007166\"><font color=\"#D3D7CF\"> module </font></span> 🐍 main.py<span style=\"background-color:#007166\"><font color=\"#D3D7CF\"> code </font></span> Importing the FastAPI app object from the module withthe following code:<u style=\"text-decoration-style:solid\">from </u><u style=\"text-decoration-style:solid\"><b>main</b></u><u style=\"text-decoration-style:solid\"> import </u><u style=\"text-decoration-style:solid\"><b>app</b></u><span style=\"background-color:#007166\"><font color=\"#D3D7CF\"> app </font></span> Using import string: <font color=\"#3465A4\">main:app</font><span style=\"background-color:#007166\"><font color=\"#D3D7CF\"> server </font></span> Server started at <font color=\"#729FCF\"><u style=\"text-decoration-style:solid\">http://127.0.0.1:8000</u></font><span style=\"background-color:#007166\"><font color=\"#D3D7CF\"> server </font></span> Documentation at <font color=\"#729FCF\"><u style=\"text-decoration-style:solid\">http://127.0.0.1:8000/docs</u></font><span style=\"background-color:#007166\"><font color=\"#D3D7CF\"> tip </font></span> Running in development mode, for production use:<b>fastapi run</b>Logs:<span style=\"background-color:#007166\"><font color=\"#D3D7CF\"> INFO </font></span> Will watch for changes in these directories:<b>[</b><font color=\"#4E9A06\">&apos;/home/user/code/awesomeapp&apos;</font><b>]</b><span style=\"background-color:#007166\"><font color=\"#D3D7CF\"> INFO </font></span> Uvicorn running on <font color=\"#729FCF\"><u style=\"text-decoration-style:solid\">http://127.0.0.1:8000</u></font> <b>(</b>Press CTRL+Cto quit<b>)</b><span style=\"background-color:#007166\"><font color=\"#D3D7CF\"> INFO </font></span> Started reloader process <b>[</b><font color=\"#34E2E2\"><b>383138</b></font><b>]</b> using WatchFiles<span style=\"background-color:#007166\"><font color=\"#D3D7CF\"> INFO </font></span> Started server process <b>[</b><font color=\"#34E2E2\"><b>383153</b></font><b>]</b><span style=\"background-color:#007166\"><font color=\"#D3D7CF\"> INFO </font></span> Waiting for application startup.<span style=\"background-color:#007166\"><font color=\"#D3D7CF\"> INFO </font></span> Application startup complete.It isHIGHLY encouragedthat you write or copy the code, edit it and run it locally.Using it in your editor is what really shows you the benefits of FastAPI, seeing how little code you have to write, all the type checks, autocompletion, etc.Install FastAPI¶The first step is to install FastAPI.Make sure you create avirtual environment, activate it, and theninstall FastAPI:$pipinstall\"fastapi[standard]\"---> 100%NoteWhen you install withpip install \"fastapi[standard]\"it comes with some default optional standard dependencies, includingfastapi-cloud-cli, which allows you to deploy toFastAPI Cloud.If you don't want to have those optional dependencies, you can instead installpip install fastapi.If you want to install the standard dependencies but without thefastapi-cloud-cli, you can install withpip install \"fastapi[standard-no-fastapi-cloud-cli]\".Advanced User Guide¶There is also anAdvanced User Guidethat you can read later after thisTutorial - User guide.TheAdvanced User Guidebuilds on this one, uses the same concepts, and teaches you some extra features.But you should first read theTutorial - User Guide(what you are reading right now).It's designed so that you can build a complete application with just theTutorial - User Guide, and then extend it in different ways, depending on your needs, using some of the additional ideas from theAdvanced User Guide.Back to top",
      "chunk_index": 0,
      "total_chunks": 1,
      "word_count": 437,
      "chunked_at": "2025-10-04T20:06:38.800013",
      "type": "documentation",
      "crawled_at": "2025-10-04T20:06:28.022439"
    },
    {
      "id": "8af24fb0f86c_chunk_0",
      "parent_id": "8af24fb0f86c",
      "source": "FastAPI",
      "url": "https://fastapi.tiangolo.com/advanced/",
      "title": "FastAPI - advanced/",
      "content": "Advanced User Guide¶Additional Features¶The mainTutorial - User Guideshould be enough to give you a tour through all the main features ofFastAPI.In the next sections you will see other options, configurations, and additional features.TipThe next sections arenot necessarily \"advanced\".And it's possible that for your use case, the solution is in one of them.Read the Tutorial first¶You could still use most of the features inFastAPIwith the knowledge from the mainTutorial - User Guide.And the next sections assume you already read it, and assume that you know those main ideas.Back to top",
      "chunk_index": 0,
      "total_chunks": 1,
      "word_count": 89,
      "chunked_at": "2025-10-04T20:06:38.800013",
      "type": "documentation",
      "crawled_at": "2025-10-04T20:06:29.183835"
    },
    {
      "id": "0b6963c71002_chunk_0",
      "parent_id": "0b6963c71002",
      "source": "FastAPI",
      "url": "https://fastapi.tiangolo.com/tutorial/security/",
      "title": "FastAPI - tutorial/security/",
      "content": "Security¶There are many ways to handle security, authentication and authorization.And it normally is a complex and \"difficult\" topic.In many frameworks and systems just handling security and authentication takes a big amount of effort and code (in many cases it can be 50% or more of all the code written).FastAPIprovides several tools to help you deal withSecurityeasily, rapidly, in a standard way, without having to study and learn all the security specifications.But first, let's check some small concepts.In a hurry?¶If you don't care about any of these terms and you just need to add security with authentication based on username and passwordright now, skip to the next chapters.OAuth2¶OAuth2 is a specification that defines several ways to handle authentication and authorization.It is quite an extensive specification and covers several complex use cases.It includes ways to authenticate using a \"third party\".That's what all the systems with \"login with Facebook, Google, X (Twitter), GitHub\" use underneath.OAuth 1¶There was an OAuth 1, which is very different from OAuth2, and more complex, as it included direct specifications on how to encrypt the communication.It is not very popular or used nowadays.OAuth2 doesn't specify how to encrypt the communication, it expects you to have your application served with HTTPS.TipIn the section aboutdeploymentyou will see how to set up HTTPS for free, using Traefik and Let's Encrypt.OpenID Connect¶OpenID Connect is another specification, based onOAuth2.It just extends OAuth2 specifying some things that are relatively ambiguous in OAuth2, to try to make it more interoperable.For example, Google login uses OpenID Connect (which underneath uses OAuth2).But Facebook login doesn't support OpenID Connect. It has its own flavor of OAuth2.OpenID (not \"OpenID Connect\")¶There was also an \"OpenID\" specification. That tried to solve the same thing asOpenID Connect, but was not based on OAuth2.So, it was a complete additional system.It is not very popular or used nowadays.OpenAPI¶OpenAPI (previously known as Swagger) is the open specification for building APIs (now part of the Linux Foundation).FastAPIis based onOpenAPI.That's what makes it possible to have multiple automatic interactive documentation interfaces, code generation, etc.OpenAPI has a way to define multiple security \"schemes\".By using them, you can take advantage of all these standard-based tools, including these interactive documentation systems.OpenAPI defines the following security schemes:apiKey: an application specific key that can come from:A query parameter.A header.A cookie.http: standard HTTP authentication systems, including:bearer: a headerAuthorizationwith a value ofBearerplus a token. This is inherited from OAuth2.HTTP Basic authentication.HTTP Digest, etc.oauth2: all the OAuth2 ways to handle security (called \"flows\").Several of these flows are appropriate for building an OAuth 2.0 authentication provider (like Google, Facebook, X (Twitter), GitHub, etc):implicitclientCredentialsauthorizationCodeBut there is one specific \"flow\" that can be perfectly used for handling authentication in the same application directly:password: some next chapters will cover examples of this.openIdConnect: has a way to define how to discover OAuth2 authentication data automatically.This automatic discovery is what is defined in the OpenID Connect specification.TipIntegrating other authentication/authorization providers like Google, Facebook, X (Twitter), GitHub, etc. is also possible and relatively easy.The most complex problem is building an authentication/authorization provider like",
      "chunk_index": 0,
      "total_chunks": 2,
      "word_count": 500,
      "chunked_at": "2025-10-04T20:06:38.800013",
      "type": "documentation",
      "crawled_at": "2025-10-04T20:06:30.883342"
    },
    {
      "id": "0b6963c71002_chunk_1",
      "parent_id": "0b6963c71002",
      "source": "FastAPI",
      "url": "https://fastapi.tiangolo.com/tutorial/security/",
      "title": "FastAPI - tutorial/security/",
      "content": "of this.openIdConnect: has a way to define how to discover OAuth2 authentication data automatically.This automatic discovery is what is defined in the OpenID Connect specification.TipIntegrating other authentication/authorization providers like Google, Facebook, X (Twitter), GitHub, etc. is also possible and relatively easy.The most complex problem is building an authentication/authorization provider like those, butFastAPIgives you the tools to do it easily, while doing the heavy lifting for you.FastAPIutilities¶FastAPI provides several tools for each of these security schemes in thefastapi.securitymodule that simplify using these security mechanisms.In the next chapters you will see how to add security to your API using those tools provided byFastAPI.And you will also see how it gets automatically integrated into the interactive documentation system.Back to top",
      "chunk_index": 1,
      "total_chunks": 2,
      "word_count": 117,
      "chunked_at": "2025-10-04T20:06:38.800013",
      "type": "documentation",
      "crawled_at": "2025-10-04T20:06:30.883342"
    },
    {
      "id": "c5147e0c653d_chunk_0",
      "parent_id": "c5147e0c653d",
      "source": "Redis",
      "url": "https://redis.io/docs/latest/",
      "title": "Redis Documentation",
      "content": "Get StartedQuickly set up a Redis cache, primary, vector, or custom databaseSet up a Free Redis-managed database on AWS, GCP, or AzureRedis Cloud quick startGet started with Redis Open Source âBuild GenAI apps with RedisGet started using Redis for retrieval augmented generation (RAG)Redis with RAGRedis for AI docs and code examples âOptimize Redis for high-scale appsGet the Redis Insight GUI on AWS EC2, Docker, Kubernetes, and desktopRedis Insight install guidePerformance and memory optimization user guide âMigrate data to or from RedisMigrate data from files, data generators, relational databases, or snapshotsRedis input and output CLI toolRedis Input/Output Tool quick start âConnect with Redis client API librariesConnect your application to a Redis database and try an exampleRedis client API library guidesPython âC#/.NET âJavaScript âJava âGo âPHP âDeployControl your Redis deployments on-premises and on cloud platformsRobust support for hybrid and multi-AZ environmentsRedis deployment planningActive-Active geo-distributed Redis âDeploy on KubernetesGet started with the Redis Software for Kubernetes container imageKubernetes deployment guideDeploy Redis Software for Kubernetes with OpenShift âIngest and sync data to RedisSync Redis Software with live data from your disk-based databasesPipeline quick startRedis Data Integration feature overview âMonitor Redis with PrometheusGet started with the Redis Software integration for Prometheus and GrafanaPrometheus and Grafana with RedisPrometheus and Grafana with Redis Cloud âClient tools to connect to a Redis serverYou can use the CLI, Redis Insight, or the Redis VSCode extension to connect to RedisClient tools overview guideRedis CLI âRedis Insight âRedis for VSCode â",
      "chunk_index": 0,
      "total_chunks": 1,
      "word_count": 240,
      "chunked_at": "2025-10-04T20:06:38.800013",
      "type": "documentation",
      "crawled_at": "2025-10-04T20:06:32.803936"
    },
    {
      "id": "4401efc741d5_chunk_0",
      "parent_id": "4401efc741d5",
      "source": "Redis",
      "url": "https://redis.io/docs/latest/develop/",
      "title": "Redis - develop/",
      "content": "Develop with RedisLearn how to develop with RedisTry these Redis commandsRedis CLIPINGHSETuser:1 name antirez vocation artistHGETALLuser:1SETe 2.71INCRBYFLOATe 0.43RENAMEe piGETpi#See all commandsPINGGet a Redis server running in minutes with a free trial ofRedis Cloud, or installRedis Open Sourcelocally on your machine. Then, explore Redis with your favoriteprogramming languageor analyze and manage your database with ourUI tools:Get startedDocument searchVector searchPythonSee Python examplesSee Python examplesSee Python examplesC#/.NETSee C# examplesSee C# examplesSee C# examplesNode.jsSee JS examplesSee JS examplesSee JS examplesJavaSee Java examplesSee Java examplesSee Java examplesGoSee Go examplesSee Go examplesSee Go examplesPHPSee PHP examplesSee PHP examplesSee PHP examplesRedis InsightVisual client tool for creating, managing, and analyzing Redis databases.Download Redis Insight.Redis for VS CodeVS Code extension for creating, managing, and analyzing Redis databases.Install Redis for VS Code.Quick startData typesQuery engineVector databaseDocument storeData structure storeRAG with RedisGenAIStringJSONHashVector setProbabilistic typesGet startedSchema field typesIndexingQueryingRATE THIS PAGE★★★★★Back to top âSubmit",
      "chunk_index": 0,
      "total_chunks": 1,
      "word_count": 141,
      "chunked_at": "2025-10-04T20:06:38.800013",
      "type": "documentation",
      "crawled_at": "2025-10-04T20:06:36.209614"
    }
  ]
}