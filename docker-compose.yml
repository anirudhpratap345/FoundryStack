version: '3.8'

services:
  # Python Retriever Agent
  retriever-agent:
    build: ./python-retriever
    ports:
      - "8000:8000"
    environment:
      - PORT=8000
      - HOST=0.0.0.0
      - LOG_LEVEL=INFO
      - CORS_ORIGINS=http://localhost:3000,http://127.0.0.1:3000
    volumes:
      - ./python-retriever:/app
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Python Analyst Agent
  analyst-agent:
    build: ./analyst-agent
    ports:
      - "8002:8002"
    environment:
      - PORT=8002
      - HOST=0.0.0.0
      - LOG_LEVEL=INFO
      - CORS_ORIGINS=http://localhost:3000,http://127.0.0.1:3000,http://localhost:8000
    volumes:
      - ./analyst-agent:/app
    restart: unless-stopped
    depends_on:
      retriever-agent:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8002/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Python Writer Agent
  writer-agent:
    build: ./writer-agent
    ports:
      - "8003:8003"
    environment:
      - PORT=8003
      - HOST=0.0.0.0
      - LOG_LEVEL=INFO
      - CORS_ORIGINS=http://localhost:3000,http://127.0.0.1:3000,http://localhost:8000,http://localhost:8002
    volumes:
      - ./writer-agent:/app
    restart: unless-stopped
    depends_on:
      analyst-agent:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8003/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Python Reviewer Agent
  reviewer-agent:
    build: ./reviewer-agent
    ports:
      - "8004:8004"
    environment:
      - PORT=8004
      - HOST=0.0.0.0
      - LOG_LEVEL=INFO
      - CORS_ORIGINS=http://localhost:3000,http://127.0.0.1:3000,http://localhost:8000,http://localhost:8002,http://localhost:8003
    volumes:
      - ./reviewer-agent:/app
    restart: unless-stopped
    depends_on:
      writer-agent:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8004/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Python Exporter Agent
  exporter-agent:
    build: ./exporter-agent
    ports:
      - "8005:8005"
    environment:
      - PORT=8005
      - HOST=0.0.0.0
      - LOG_LEVEL=INFO
      - CORS_ORIGINS=http://localhost:3000,http://127.0.0.1:3000,http://localhost:8000,http://localhost:8002,http://localhost:8003,http://localhost:8004
    volumes:
      - ./exporter-agent:/app
      - ./exports:/app/exports  # Mount exports directory
    restart: unless-stopped
    depends_on:
      reviewer-agent:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8005/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Next.js Application
  nextjs-app:
    build: .
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - RETRIEVER_AGENT_URL=http://retriever-agent:8000
      - ANALYST_AGENT_URL=http://analyst-agent:8002
      - WRITER_AGENT_URL=http://writer-agent:8003
      - REVIEWER_AGENT_URL=http://reviewer-agent:8004
      - EXPORTER_AGENT_URL=http://exporter-agent:8005
    depends_on:
      retriever-agent:
        condition: service_healthy
    volumes:
      - .:/app
      - /app/node_modules
    restart: unless-stopped

  # Supabase (if using local instance)
  # supabase:
  #   image: supabase/postgres:15.1.0.117
  #   ports:
  #     - "5432:5432"
  #   environment:
  #     POSTGRES_DB: postgres
  #     POSTGRES_USER: postgres
  #     POSTGRES_PASSWORD: postgres
  #   volumes:
  #     - supabase_db:/var/lib/postgresql/data
  #   restart: unless-stopped

# volumes:
#   supabase_db: